apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "defguard-gateway.fullname" . }}
  labels:
    {{- include "defguard-gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "defguard-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "defguard-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "defguard-gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "defguard-gateway.fullname" . }}-config
            {{- if .Values.additionalEnvFromConfigMap }}
            - configMapRef:
                name: {{ .Values.additionalEnvFromConfigMap }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: wireguard
              containerPort: {{ .Values.service.wireguard.port }}
              protocol: UDP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.healthCheck.port }}
            initialDelaySeconds: {{ .Values.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.healthCheck.port }}
            initialDelaySeconds: {{ .Values.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.token }}
          env:
            - name: DEFGUARD_TOKEN
              value: {{ .Values.token }}
          {{- else if .Values.existingTokenSecret }}
          env:
            - name: DEFGUARD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingTokenSecret }}
                  key: {{ .Values.existingTokenSecretKey }}
          {{- end }}
          {{- if .Values.healthCheck.enabled }}
          env:
            - name: HEALTH_PORT
              value: {{ .Values.healthCheck.port }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
