affinity: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
cookie:
  domain: ""
  insecure: false
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: ghcr.io/defguard/defguard
  tag: ""
imagePullSecrets: []
ingress:
  annotations: {}
  className: ""
  enabled: true
  hosts:
    grpc: defguard-grpc.local
    web: defguard.local
  tls: []
jwtSecret: jwt-secrets
ldap:
  admin_group: ""
  bind_password: ""
  bind_username: ""
  enabled: false
  group_search_base: ""
  url: ""
  user_search_base: ""
nameOverride: ""
nodeSelector: {}
openIdKey: openid-key
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
# sub-chart bitnami/postgresql
postgresql:
  create: true
  host: "" # set if using external postgresql ~ create: false
  auth:
    database: defguard
    existingSecret: postgres-password
    existingSecretPasswordKey: "" # set if using external postgresql ~ create: false
    username: defguard
proxyUrl: ""
publicUrl: "http://defguard.local"
replicaCount: 1
resources: {}
securityContext: {}
service:
  ports:
    grpc: 50055
    http: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
tolerations: []
# sub-chart defguard-proxy
defguard-proxy:
  enabled: false
  publicUrl: "http://enrollment.local"
  ingress:
    hosts:
      grpc: defguard-proxy-grpc.local
      web: enrollment.local
